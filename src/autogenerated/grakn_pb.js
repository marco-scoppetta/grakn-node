/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var concept_pb = require('./concept_pb.js');
var iterator_pb = require('./iterator_pb.js');
goog.exportSymbol('proto.ai.grakn.rpc.generated.Answer', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.Commit', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.DeleteRequest', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.DeleteResponse', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.Done', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.ExecQuery', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.Infer', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.Keyspace', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.Open', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.PutAttributeType', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.PutRule', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.Query', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.QueryResult', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.RunConceptMethod', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.TxRequest', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.TxResponse', null, global);
goog.exportSymbol('proto.ai.grakn.rpc.generated.TxType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.TxRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_);
};
goog.inherits(proto.ai.grakn.rpc.generated.TxRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.TxRequest.displayName = 'proto.ai.grakn.rpc.generated.TxRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14]];

/**
 * @enum {number}
 */
proto.ai.grakn.rpc.generated.TxRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  OPEN: 1,
  COMMIT: 2,
  EXECQUERY: 3,
  NEXT: 4,
  STOP: 5,
  RUNCONCEPTMETHOD: 6,
  GETCONCEPT: 7,
  GETSCHEMACONCEPT: 8,
  GETATTRIBUTESBYVALUE: 9,
  PUTENTITYTYPE: 10,
  PUTRELATIONSHIPTYPE: 11,
  PUTATTRIBUTETYPE: 12,
  PUTROLE: 13,
  PUTRULE: 14
};

/**
 * @return {proto.ai.grakn.rpc.generated.TxRequest.RequestCase}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getRequestCase = function() {
  return /** @type {proto.ai.grakn.rpc.generated.TxRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.TxRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.TxRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.TxRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    open: (f = msg.getOpen()) && proto.ai.grakn.rpc.generated.Open.toObject(includeInstance, f),
    commit: (f = msg.getCommit()) && proto.ai.grakn.rpc.generated.Commit.toObject(includeInstance, f),
    execquery: (f = msg.getExecquery()) && proto.ai.grakn.rpc.generated.ExecQuery.toObject(includeInstance, f),
    next: (f = msg.getNext()) && iterator_pb.Next.toObject(includeInstance, f),
    stop: (f = msg.getStop()) && iterator_pb.Stop.toObject(includeInstance, f),
    runconceptmethod: (f = msg.getRunconceptmethod()) && proto.ai.grakn.rpc.generated.RunConceptMethod.toObject(includeInstance, f),
    getconcept: (f = msg.getGetconcept()) && concept_pb.ConceptId.toObject(includeInstance, f),
    getschemaconcept: (f = msg.getGetschemaconcept()) && concept_pb.Label.toObject(includeInstance, f),
    getattributesbyvalue: (f = msg.getGetattributesbyvalue()) && concept_pb.AttributeValue.toObject(includeInstance, f),
    putentitytype: (f = msg.getPutentitytype()) && concept_pb.Label.toObject(includeInstance, f),
    putrelationshiptype: (f = msg.getPutrelationshiptype()) && concept_pb.Label.toObject(includeInstance, f),
    putattributetype: (f = msg.getPutattributetype()) && proto.ai.grakn.rpc.generated.PutAttributeType.toObject(includeInstance, f),
    putrole: (f = msg.getPutrole()) && concept_pb.Label.toObject(includeInstance, f),
    putrule: (f = msg.getPutrule()) && proto.ai.grakn.rpc.generated.PutRule.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.TxRequest}
 */
proto.ai.grakn.rpc.generated.TxRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.TxRequest;
  return proto.ai.grakn.rpc.generated.TxRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.TxRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.TxRequest}
 */
proto.ai.grakn.rpc.generated.TxRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.grakn.rpc.generated.Open;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.Open.deserializeBinaryFromReader);
      msg.setOpen(value);
      break;
    case 2:
      var value = new proto.ai.grakn.rpc.generated.Commit;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.Commit.deserializeBinaryFromReader);
      msg.setCommit(value);
      break;
    case 3:
      var value = new proto.ai.grakn.rpc.generated.ExecQuery;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.ExecQuery.deserializeBinaryFromReader);
      msg.setExecquery(value);
      break;
    case 4:
      var value = new iterator_pb.Next;
      reader.readMessage(value,iterator_pb.Next.deserializeBinaryFromReader);
      msg.setNext(value);
      break;
    case 5:
      var value = new iterator_pb.Stop;
      reader.readMessage(value,iterator_pb.Stop.deserializeBinaryFromReader);
      msg.setStop(value);
      break;
    case 6:
      var value = new proto.ai.grakn.rpc.generated.RunConceptMethod;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.RunConceptMethod.deserializeBinaryFromReader);
      msg.setRunconceptmethod(value);
      break;
    case 7:
      var value = new concept_pb.ConceptId;
      reader.readMessage(value,concept_pb.ConceptId.deserializeBinaryFromReader);
      msg.setGetconcept(value);
      break;
    case 8:
      var value = new concept_pb.Label;
      reader.readMessage(value,concept_pb.Label.deserializeBinaryFromReader);
      msg.setGetschemaconcept(value);
      break;
    case 9:
      var value = new concept_pb.AttributeValue;
      reader.readMessage(value,concept_pb.AttributeValue.deserializeBinaryFromReader);
      msg.setGetattributesbyvalue(value);
      break;
    case 10:
      var value = new concept_pb.Label;
      reader.readMessage(value,concept_pb.Label.deserializeBinaryFromReader);
      msg.setPutentitytype(value);
      break;
    case 11:
      var value = new concept_pb.Label;
      reader.readMessage(value,concept_pb.Label.deserializeBinaryFromReader);
      msg.setPutrelationshiptype(value);
      break;
    case 12:
      var value = new proto.ai.grakn.rpc.generated.PutAttributeType;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.PutAttributeType.deserializeBinaryFromReader);
      msg.setPutattributetype(value);
      break;
    case 13:
      var value = new concept_pb.Label;
      reader.readMessage(value,concept_pb.Label.deserializeBinaryFromReader);
      msg.setPutrole(value);
      break;
    case 14:
      var value = new proto.ai.grakn.rpc.generated.PutRule;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.PutRule.deserializeBinaryFromReader);
      msg.setPutrule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.TxRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.TxRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.TxRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpen();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.grakn.rpc.generated.Open.serializeBinaryToWriter
    );
  }
  f = message.getCommit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ai.grakn.rpc.generated.Commit.serializeBinaryToWriter
    );
  }
  f = message.getExecquery();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai.grakn.rpc.generated.ExecQuery.serializeBinaryToWriter
    );
  }
  f = message.getNext();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      iterator_pb.Next.serializeBinaryToWriter
    );
  }
  f = message.getStop();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      iterator_pb.Stop.serializeBinaryToWriter
    );
  }
  f = message.getRunconceptmethod();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ai.grakn.rpc.generated.RunConceptMethod.serializeBinaryToWriter
    );
  }
  f = message.getGetconcept();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      concept_pb.ConceptId.serializeBinaryToWriter
    );
  }
  f = message.getGetschemaconcept();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      concept_pb.Label.serializeBinaryToWriter
    );
  }
  f = message.getGetattributesbyvalue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      concept_pb.AttributeValue.serializeBinaryToWriter
    );
  }
  f = message.getPutentitytype();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      concept_pb.Label.serializeBinaryToWriter
    );
  }
  f = message.getPutrelationshiptype();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      concept_pb.Label.serializeBinaryToWriter
    );
  }
  f = message.getPutattributetype();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.ai.grakn.rpc.generated.PutAttributeType.serializeBinaryToWriter
    );
  }
  f = message.getPutrole();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      concept_pb.Label.serializeBinaryToWriter
    );
  }
  f = message.getPutrule();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.ai.grakn.rpc.generated.PutRule.serializeBinaryToWriter
    );
  }
};


/**
 * optional Open open = 1;
 * @return {?proto.ai.grakn.rpc.generated.Open}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getOpen = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Open} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.Open, 1));
};


/** @param {?proto.ai.grakn.rpc.generated.Open|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setOpen = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearOpen = function() {
  this.setOpen(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasOpen = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Commit commit = 2;
 * @return {?proto.ai.grakn.rpc.generated.Commit}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getCommit = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Commit} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.Commit, 2));
};


/** @param {?proto.ai.grakn.rpc.generated.Commit|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setCommit = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearCommit = function() {
  this.setCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasCommit = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ExecQuery execQuery = 3;
 * @return {?proto.ai.grakn.rpc.generated.ExecQuery}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getExecquery = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.ExecQuery} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.ExecQuery, 3));
};


/** @param {?proto.ai.grakn.rpc.generated.ExecQuery|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setExecquery = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearExecquery = function() {
  this.setExecquery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasExecquery = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Next next = 4;
 * @return {?proto.ai.grakn.rpc.generated.Next}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getNext = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Next} */ (
    jspb.Message.getWrapperField(this, iterator_pb.Next, 4));
};


/** @param {?proto.ai.grakn.rpc.generated.Next|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setNext = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearNext = function() {
  this.setNext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasNext = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Stop stop = 5;
 * @return {?proto.ai.grakn.rpc.generated.Stop}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getStop = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Stop} */ (
    jspb.Message.getWrapperField(this, iterator_pb.Stop, 5));
};


/** @param {?proto.ai.grakn.rpc.generated.Stop|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setStop = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearStop = function() {
  this.setStop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasStop = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RunConceptMethod runConceptMethod = 6;
 * @return {?proto.ai.grakn.rpc.generated.RunConceptMethod}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getRunconceptmethod = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.RunConceptMethod} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.RunConceptMethod, 6));
};


/** @param {?proto.ai.grakn.rpc.generated.RunConceptMethod|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setRunconceptmethod = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearRunconceptmethod = function() {
  this.setRunconceptmethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasRunconceptmethod = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ConceptId getConcept = 7;
 * @return {?proto.ai.grakn.rpc.generated.ConceptId}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getGetconcept = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.ConceptId} */ (
    jspb.Message.getWrapperField(this, concept_pb.ConceptId, 7));
};


/** @param {?proto.ai.grakn.rpc.generated.ConceptId|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setGetconcept = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearGetconcept = function() {
  this.setGetconcept(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasGetconcept = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Label getSchemaConcept = 8;
 * @return {?proto.ai.grakn.rpc.generated.Label}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getGetschemaconcept = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Label} */ (
    jspb.Message.getWrapperField(this, concept_pb.Label, 8));
};


/** @param {?proto.ai.grakn.rpc.generated.Label|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setGetschemaconcept = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearGetschemaconcept = function() {
  this.setGetschemaconcept(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasGetschemaconcept = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional AttributeValue getAttributesByValue = 9;
 * @return {?proto.ai.grakn.rpc.generated.AttributeValue}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getGetattributesbyvalue = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.AttributeValue} */ (
    jspb.Message.getWrapperField(this, concept_pb.AttributeValue, 9));
};


/** @param {?proto.ai.grakn.rpc.generated.AttributeValue|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setGetattributesbyvalue = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearGetattributesbyvalue = function() {
  this.setGetattributesbyvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasGetattributesbyvalue = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Label putEntityType = 10;
 * @return {?proto.ai.grakn.rpc.generated.Label}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getPutentitytype = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Label} */ (
    jspb.Message.getWrapperField(this, concept_pb.Label, 10));
};


/** @param {?proto.ai.grakn.rpc.generated.Label|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setPutentitytype = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearPutentitytype = function() {
  this.setPutentitytype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasPutentitytype = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Label putRelationshipType = 11;
 * @return {?proto.ai.grakn.rpc.generated.Label}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getPutrelationshiptype = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Label} */ (
    jspb.Message.getWrapperField(this, concept_pb.Label, 11));
};


/** @param {?proto.ai.grakn.rpc.generated.Label|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setPutrelationshiptype = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearPutrelationshiptype = function() {
  this.setPutrelationshiptype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasPutrelationshiptype = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PutAttributeType putAttributeType = 12;
 * @return {?proto.ai.grakn.rpc.generated.PutAttributeType}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getPutattributetype = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.PutAttributeType} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.PutAttributeType, 12));
};


/** @param {?proto.ai.grakn.rpc.generated.PutAttributeType|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setPutattributetype = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearPutattributetype = function() {
  this.setPutattributetype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasPutattributetype = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Label putRole = 13;
 * @return {?proto.ai.grakn.rpc.generated.Label}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getPutrole = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Label} */ (
    jspb.Message.getWrapperField(this, concept_pb.Label, 13));
};


/** @param {?proto.ai.grakn.rpc.generated.Label|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setPutrole = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearPutrole = function() {
  this.setPutrole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasPutrole = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional PutRule putRule = 14;
 * @return {?proto.ai.grakn.rpc.generated.PutRule}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.getPutrule = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.PutRule} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.PutRule, 14));
};


/** @param {?proto.ai.grakn.rpc.generated.PutRule|undefined} value */
proto.ai.grakn.rpc.generated.TxRequest.prototype.setPutrule = function(value) {
  jspb.Message.setOneofWrapperField(this, 14, proto.ai.grakn.rpc.generated.TxRequest.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxRequest.prototype.clearPutrule = function() {
  this.setPutrule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxRequest.prototype.hasPutrule = function() {
  return jspb.Message.getField(this, 14) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.DeleteRequest.displayName = 'proto.ai.grakn.rpc.generated.DeleteRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    open: (f = msg.getOpen()) && proto.ai.grakn.rpc.generated.Open.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.DeleteRequest}
 */
proto.ai.grakn.rpc.generated.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.DeleteRequest;
  return proto.ai.grakn.rpc.generated.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.DeleteRequest}
 */
proto.ai.grakn.rpc.generated.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.grakn.rpc.generated.Open;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.Open.deserializeBinaryFromReader);
      msg.setOpen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpen();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.grakn.rpc.generated.Open.serializeBinaryToWriter
    );
  }
};


/**
 * optional Open open = 1;
 * @return {?proto.ai.grakn.rpc.generated.Open}
 */
proto.ai.grakn.rpc.generated.DeleteRequest.prototype.getOpen = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Open} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.Open, 1));
};


/** @param {?proto.ai.grakn.rpc.generated.Open|undefined} value */
proto.ai.grakn.rpc.generated.DeleteRequest.prototype.setOpen = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.grakn.rpc.generated.DeleteRequest.prototype.clearOpen = function() {
  this.setOpen(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.DeleteRequest.prototype.hasOpen = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.DeleteResponse.displayName = 'proto.ai.grakn.rpc.generated.DeleteResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.DeleteResponse}
 */
proto.ai.grakn.rpc.generated.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.DeleteResponse;
  return proto.ai.grakn.rpc.generated.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.DeleteResponse}
 */
proto.ai.grakn.rpc.generated.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.Open = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.Open, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.Open.displayName = 'proto.ai.grakn.rpc.generated.Open';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.Open.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.Open.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.Open} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Open.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyspace: (f = msg.getKeyspace()) && proto.ai.grakn.rpc.generated.Keyspace.toObject(includeInstance, f),
    txtype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    password: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.Open}
 */
proto.ai.grakn.rpc.generated.Open.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.Open;
  return proto.ai.grakn.rpc.generated.Open.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.Open} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.Open}
 */
proto.ai.grakn.rpc.generated.Open.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.grakn.rpc.generated.Keyspace;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.Keyspace.deserializeBinaryFromReader);
      msg.setKeyspace(value);
      break;
    case 2:
      var value = /** @type {!proto.ai.grakn.rpc.generated.TxType} */ (reader.readEnum());
      msg.setTxtype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.Open.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.Open.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.Open} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Open.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyspace();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.grakn.rpc.generated.Keyspace.serializeBinaryToWriter
    );
  }
  f = message.getTxtype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Keyspace keyspace = 1;
 * @return {?proto.ai.grakn.rpc.generated.Keyspace}
 */
proto.ai.grakn.rpc.generated.Open.prototype.getKeyspace = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Keyspace} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.Keyspace, 1));
};


/** @param {?proto.ai.grakn.rpc.generated.Keyspace|undefined} value */
proto.ai.grakn.rpc.generated.Open.prototype.setKeyspace = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.grakn.rpc.generated.Open.prototype.clearKeyspace = function() {
  this.setKeyspace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.Open.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TxType txType = 2;
 * @return {!proto.ai.grakn.rpc.generated.TxType}
 */
proto.ai.grakn.rpc.generated.Open.prototype.getTxtype = function() {
  return /** @type {!proto.ai.grakn.rpc.generated.TxType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.ai.grakn.rpc.generated.TxType} value */
proto.ai.grakn.rpc.generated.Open.prototype.setTxtype = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.ai.grakn.rpc.generated.Open.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ai.grakn.rpc.generated.Open.prototype.setUsername = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.ai.grakn.rpc.generated.Open.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ai.grakn.rpc.generated.Open.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.Commit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.Commit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.Commit.displayName = 'proto.ai.grakn.rpc.generated.Commit';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.Commit.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.Commit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.Commit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Commit.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.Commit}
 */
proto.ai.grakn.rpc.generated.Commit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.Commit;
  return proto.ai.grakn.rpc.generated.Commit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.Commit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.Commit}
 */
proto.ai.grakn.rpc.generated.Commit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.Commit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.Commit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.Commit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Commit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.ExecQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.ExecQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.ExecQuery.displayName = 'proto.ai.grakn.rpc.generated.ExecQuery';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.ExecQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.ExecQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.ExecQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.ExecQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: (f = msg.getQuery()) && proto.ai.grakn.rpc.generated.Query.toObject(includeInstance, f),
    infer: (f = msg.getInfer()) && proto.ai.grakn.rpc.generated.Infer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.ExecQuery}
 */
proto.ai.grakn.rpc.generated.ExecQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.ExecQuery;
  return proto.ai.grakn.rpc.generated.ExecQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.ExecQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.ExecQuery}
 */
proto.ai.grakn.rpc.generated.ExecQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.grakn.rpc.generated.Query;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.Query.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 2:
      var value = new proto.ai.grakn.rpc.generated.Infer;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.Infer.deserializeBinaryFromReader);
      msg.setInfer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.ExecQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.ExecQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.ExecQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.ExecQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.grakn.rpc.generated.Query.serializeBinaryToWriter
    );
  }
  f = message.getInfer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ai.grakn.rpc.generated.Infer.serializeBinaryToWriter
    );
  }
};


/**
 * optional Query query = 1;
 * @return {?proto.ai.grakn.rpc.generated.Query}
 */
proto.ai.grakn.rpc.generated.ExecQuery.prototype.getQuery = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Query} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.Query, 1));
};


/** @param {?proto.ai.grakn.rpc.generated.Query|undefined} value */
proto.ai.grakn.rpc.generated.ExecQuery.prototype.setQuery = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.grakn.rpc.generated.ExecQuery.prototype.clearQuery = function() {
  this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.ExecQuery.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Infer infer = 2;
 * @return {?proto.ai.grakn.rpc.generated.Infer}
 */
proto.ai.grakn.rpc.generated.ExecQuery.prototype.getInfer = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Infer} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.Infer, 2));
};


/** @param {?proto.ai.grakn.rpc.generated.Infer|undefined} value */
proto.ai.grakn.rpc.generated.ExecQuery.prototype.setInfer = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ai.grakn.rpc.generated.ExecQuery.prototype.clearInfer = function() {
  this.setInfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.ExecQuery.prototype.hasInfer = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.RunConceptMethod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.RunConceptMethod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.RunConceptMethod.displayName = 'proto.ai.grakn.rpc.generated.RunConceptMethod';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.RunConceptMethod.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.RunConceptMethod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.RunConceptMethod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.RunConceptMethod.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && concept_pb.ConceptId.toObject(includeInstance, f),
    conceptmethod: (f = msg.getConceptmethod()) && concept_pb.ConceptMethod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.RunConceptMethod}
 */
proto.ai.grakn.rpc.generated.RunConceptMethod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.RunConceptMethod;
  return proto.ai.grakn.rpc.generated.RunConceptMethod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.RunConceptMethod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.RunConceptMethod}
 */
proto.ai.grakn.rpc.generated.RunConceptMethod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new concept_pb.ConceptId;
      reader.readMessage(value,concept_pb.ConceptId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new concept_pb.ConceptMethod;
      reader.readMessage(value,concept_pb.ConceptMethod.deserializeBinaryFromReader);
      msg.setConceptmethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.RunConceptMethod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.RunConceptMethod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.RunConceptMethod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.RunConceptMethod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      concept_pb.ConceptId.serializeBinaryToWriter
    );
  }
  f = message.getConceptmethod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      concept_pb.ConceptMethod.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConceptId id = 1;
 * @return {?proto.ai.grakn.rpc.generated.ConceptId}
 */
proto.ai.grakn.rpc.generated.RunConceptMethod.prototype.getId = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.ConceptId} */ (
    jspb.Message.getWrapperField(this, concept_pb.ConceptId, 1));
};


/** @param {?proto.ai.grakn.rpc.generated.ConceptId|undefined} value */
proto.ai.grakn.rpc.generated.RunConceptMethod.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.grakn.rpc.generated.RunConceptMethod.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.RunConceptMethod.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ConceptMethod conceptMethod = 2;
 * @return {?proto.ai.grakn.rpc.generated.ConceptMethod}
 */
proto.ai.grakn.rpc.generated.RunConceptMethod.prototype.getConceptmethod = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.ConceptMethod} */ (
    jspb.Message.getWrapperField(this, concept_pb.ConceptMethod, 2));
};


/** @param {?proto.ai.grakn.rpc.generated.ConceptMethod|undefined} value */
proto.ai.grakn.rpc.generated.RunConceptMethod.prototype.setConceptmethod = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ai.grakn.rpc.generated.RunConceptMethod.prototype.clearConceptmethod = function() {
  this.setConceptmethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.RunConceptMethod.prototype.hasConceptmethod = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.PutAttributeType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.PutAttributeType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.PutAttributeType.displayName = 'proto.ai.grakn.rpc.generated.PutAttributeType';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.PutAttributeType.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.PutAttributeType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.PutAttributeType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.PutAttributeType.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: (f = msg.getLabel()) && concept_pb.Label.toObject(includeInstance, f),
    datatype: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.PutAttributeType}
 */
proto.ai.grakn.rpc.generated.PutAttributeType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.PutAttributeType;
  return proto.ai.grakn.rpc.generated.PutAttributeType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.PutAttributeType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.PutAttributeType}
 */
proto.ai.grakn.rpc.generated.PutAttributeType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new concept_pb.Label;
      reader.readMessage(value,concept_pb.Label.deserializeBinaryFromReader);
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {!proto.ai.grakn.rpc.generated.DataType} */ (reader.readEnum());
      msg.setDatatype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.PutAttributeType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.PutAttributeType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.PutAttributeType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.PutAttributeType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      concept_pb.Label.serializeBinaryToWriter
    );
  }
  f = message.getDatatype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional Label label = 1;
 * @return {?proto.ai.grakn.rpc.generated.Label}
 */
proto.ai.grakn.rpc.generated.PutAttributeType.prototype.getLabel = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Label} */ (
    jspb.Message.getWrapperField(this, concept_pb.Label, 1));
};


/** @param {?proto.ai.grakn.rpc.generated.Label|undefined} value */
proto.ai.grakn.rpc.generated.PutAttributeType.prototype.setLabel = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.grakn.rpc.generated.PutAttributeType.prototype.clearLabel = function() {
  this.setLabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.PutAttributeType.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DataType dataType = 2;
 * @return {!proto.ai.grakn.rpc.generated.DataType}
 */
proto.ai.grakn.rpc.generated.PutAttributeType.prototype.getDatatype = function() {
  return /** @type {!proto.ai.grakn.rpc.generated.DataType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.ai.grakn.rpc.generated.DataType} value */
proto.ai.grakn.rpc.generated.PutAttributeType.prototype.setDatatype = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.PutRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.PutRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.PutRule.displayName = 'proto.ai.grakn.rpc.generated.PutRule';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.PutRule.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.PutRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.PutRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.PutRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: (f = msg.getLabel()) && concept_pb.Label.toObject(includeInstance, f),
    when: (f = msg.getWhen()) && concept_pb.Pattern.toObject(includeInstance, f),
    then: (f = msg.getThen()) && concept_pb.Pattern.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.PutRule}
 */
proto.ai.grakn.rpc.generated.PutRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.PutRule;
  return proto.ai.grakn.rpc.generated.PutRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.PutRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.PutRule}
 */
proto.ai.grakn.rpc.generated.PutRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new concept_pb.Label;
      reader.readMessage(value,concept_pb.Label.deserializeBinaryFromReader);
      msg.setLabel(value);
      break;
    case 2:
      var value = new concept_pb.Pattern;
      reader.readMessage(value,concept_pb.Pattern.deserializeBinaryFromReader);
      msg.setWhen(value);
      break;
    case 3:
      var value = new concept_pb.Pattern;
      reader.readMessage(value,concept_pb.Pattern.deserializeBinaryFromReader);
      msg.setThen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.PutRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.PutRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.PutRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.PutRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      concept_pb.Label.serializeBinaryToWriter
    );
  }
  f = message.getWhen();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      concept_pb.Pattern.serializeBinaryToWriter
    );
  }
  f = message.getThen();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      concept_pb.Pattern.serializeBinaryToWriter
    );
  }
};


/**
 * optional Label label = 1;
 * @return {?proto.ai.grakn.rpc.generated.Label}
 */
proto.ai.grakn.rpc.generated.PutRule.prototype.getLabel = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Label} */ (
    jspb.Message.getWrapperField(this, concept_pb.Label, 1));
};


/** @param {?proto.ai.grakn.rpc.generated.Label|undefined} value */
proto.ai.grakn.rpc.generated.PutRule.prototype.setLabel = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.grakn.rpc.generated.PutRule.prototype.clearLabel = function() {
  this.setLabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.PutRule.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Pattern when = 2;
 * @return {?proto.ai.grakn.rpc.generated.Pattern}
 */
proto.ai.grakn.rpc.generated.PutRule.prototype.getWhen = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Pattern} */ (
    jspb.Message.getWrapperField(this, concept_pb.Pattern, 2));
};


/** @param {?proto.ai.grakn.rpc.generated.Pattern|undefined} value */
proto.ai.grakn.rpc.generated.PutRule.prototype.setWhen = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ai.grakn.rpc.generated.PutRule.prototype.clearWhen = function() {
  this.setWhen(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.PutRule.prototype.hasWhen = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Pattern then = 3;
 * @return {?proto.ai.grakn.rpc.generated.Pattern}
 */
proto.ai.grakn.rpc.generated.PutRule.prototype.getThen = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Pattern} */ (
    jspb.Message.getWrapperField(this, concept_pb.Pattern, 3));
};


/** @param {?proto.ai.grakn.rpc.generated.Pattern|undefined} value */
proto.ai.grakn.rpc.generated.PutRule.prototype.setThen = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ai.grakn.rpc.generated.PutRule.prototype.clearThen = function() {
  this.setThen(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.PutRule.prototype.hasThen = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.Infer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.Infer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.Infer.displayName = 'proto.ai.grakn.rpc.generated.Infer';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.Infer.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.Infer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.Infer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Infer.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.Infer}
 */
proto.ai.grakn.rpc.generated.Infer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.Infer;
  return proto.ai.grakn.rpc.generated.Infer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.Infer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.Infer}
 */
proto.ai.grakn.rpc.generated.Infer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.Infer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.Infer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.Infer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Infer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool value = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ai.grakn.rpc.generated.Infer.prototype.getValue = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ai.grakn.rpc.generated.Infer.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.TxResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai.grakn.rpc.generated.TxResponse.oneofGroups_);
};
goog.inherits(proto.ai.grakn.rpc.generated.TxResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.TxResponse.displayName = 'proto.ai.grakn.rpc.generated.TxResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.grakn.rpc.generated.TxResponse.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.ai.grakn.rpc.generated.TxResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  QUERYRESULT: 1,
  DONE: 2,
  CONCEPTRESPONSE: 3,
  ITERATORID: 4,
  CONCEPT: 5,
  OPTIONALCONCEPT: 6,
  ROLEPLAYER: 7
};

/**
 * @return {proto.ai.grakn.rpc.generated.TxResponse.ResponseCase}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.getResponseCase = function() {
  return /** @type {proto.ai.grakn.rpc.generated.TxResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.ai.grakn.rpc.generated.TxResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.TxResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.TxResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.TxResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryresult: (f = msg.getQueryresult()) && proto.ai.grakn.rpc.generated.QueryResult.toObject(includeInstance, f),
    done: (f = msg.getDone()) && proto.ai.grakn.rpc.generated.Done.toObject(includeInstance, f),
    conceptresponse: (f = msg.getConceptresponse()) && concept_pb.ConceptResponse.toObject(includeInstance, f),
    iteratorid: (f = msg.getIteratorid()) && iterator_pb.IteratorId.toObject(includeInstance, f),
    concept: (f = msg.getConcept()) && concept_pb.Concept.toObject(includeInstance, f),
    optionalconcept: (f = msg.getOptionalconcept()) && concept_pb.OptionalConcept.toObject(includeInstance, f),
    roleplayer: (f = msg.getRoleplayer()) && concept_pb.RolePlayer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.TxResponse}
 */
proto.ai.grakn.rpc.generated.TxResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.TxResponse;
  return proto.ai.grakn.rpc.generated.TxResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.TxResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.TxResponse}
 */
proto.ai.grakn.rpc.generated.TxResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.grakn.rpc.generated.QueryResult;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.QueryResult.deserializeBinaryFromReader);
      msg.setQueryresult(value);
      break;
    case 2:
      var value = new proto.ai.grakn.rpc.generated.Done;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.Done.deserializeBinaryFromReader);
      msg.setDone(value);
      break;
    case 3:
      var value = new concept_pb.ConceptResponse;
      reader.readMessage(value,concept_pb.ConceptResponse.deserializeBinaryFromReader);
      msg.setConceptresponse(value);
      break;
    case 4:
      var value = new iterator_pb.IteratorId;
      reader.readMessage(value,iterator_pb.IteratorId.deserializeBinaryFromReader);
      msg.setIteratorid(value);
      break;
    case 5:
      var value = new concept_pb.Concept;
      reader.readMessage(value,concept_pb.Concept.deserializeBinaryFromReader);
      msg.setConcept(value);
      break;
    case 6:
      var value = new concept_pb.OptionalConcept;
      reader.readMessage(value,concept_pb.OptionalConcept.deserializeBinaryFromReader);
      msg.setOptionalconcept(value);
      break;
    case 7:
      var value = new concept_pb.RolePlayer;
      reader.readMessage(value,concept_pb.RolePlayer.deserializeBinaryFromReader);
      msg.setRoleplayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.TxResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.TxResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.TxResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryresult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.grakn.rpc.generated.QueryResult.serializeBinaryToWriter
    );
  }
  f = message.getDone();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ai.grakn.rpc.generated.Done.serializeBinaryToWriter
    );
  }
  f = message.getConceptresponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      concept_pb.ConceptResponse.serializeBinaryToWriter
    );
  }
  f = message.getIteratorid();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      iterator_pb.IteratorId.serializeBinaryToWriter
    );
  }
  f = message.getConcept();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      concept_pb.Concept.serializeBinaryToWriter
    );
  }
  f = message.getOptionalconcept();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      concept_pb.OptionalConcept.serializeBinaryToWriter
    );
  }
  f = message.getRoleplayer();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      concept_pb.RolePlayer.serializeBinaryToWriter
    );
  }
};


/**
 * optional QueryResult queryResult = 1;
 * @return {?proto.ai.grakn.rpc.generated.QueryResult}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.getQueryresult = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.QueryResult} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.QueryResult, 1));
};


/** @param {?proto.ai.grakn.rpc.generated.QueryResult|undefined} value */
proto.ai.grakn.rpc.generated.TxResponse.prototype.setQueryresult = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ai.grakn.rpc.generated.TxResponse.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxResponse.prototype.clearQueryresult = function() {
  this.setQueryresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.hasQueryresult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Done done = 2;
 * @return {?proto.ai.grakn.rpc.generated.Done}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.getDone = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Done} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.Done, 2));
};


/** @param {?proto.ai.grakn.rpc.generated.Done|undefined} value */
proto.ai.grakn.rpc.generated.TxResponse.prototype.setDone = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ai.grakn.rpc.generated.TxResponse.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxResponse.prototype.clearDone = function() {
  this.setDone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.hasDone = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ConceptResponse conceptResponse = 3;
 * @return {?proto.ai.grakn.rpc.generated.ConceptResponse}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.getConceptresponse = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.ConceptResponse} */ (
    jspb.Message.getWrapperField(this, concept_pb.ConceptResponse, 3));
};


/** @param {?proto.ai.grakn.rpc.generated.ConceptResponse|undefined} value */
proto.ai.grakn.rpc.generated.TxResponse.prototype.setConceptresponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ai.grakn.rpc.generated.TxResponse.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxResponse.prototype.clearConceptresponse = function() {
  this.setConceptresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.hasConceptresponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional IteratorId iteratorId = 4;
 * @return {?proto.ai.grakn.rpc.generated.IteratorId}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.getIteratorid = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.IteratorId} */ (
    jspb.Message.getWrapperField(this, iterator_pb.IteratorId, 4));
};


/** @param {?proto.ai.grakn.rpc.generated.IteratorId|undefined} value */
proto.ai.grakn.rpc.generated.TxResponse.prototype.setIteratorid = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.ai.grakn.rpc.generated.TxResponse.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxResponse.prototype.clearIteratorid = function() {
  this.setIteratorid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.hasIteratorid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Concept concept = 5;
 * @return {?proto.ai.grakn.rpc.generated.Concept}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.getConcept = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Concept} */ (
    jspb.Message.getWrapperField(this, concept_pb.Concept, 5));
};


/** @param {?proto.ai.grakn.rpc.generated.Concept|undefined} value */
proto.ai.grakn.rpc.generated.TxResponse.prototype.setConcept = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.ai.grakn.rpc.generated.TxResponse.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxResponse.prototype.clearConcept = function() {
  this.setConcept(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.hasConcept = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional OptionalConcept optionalConcept = 6;
 * @return {?proto.ai.grakn.rpc.generated.OptionalConcept}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.getOptionalconcept = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.OptionalConcept} */ (
    jspb.Message.getWrapperField(this, concept_pb.OptionalConcept, 6));
};


/** @param {?proto.ai.grakn.rpc.generated.OptionalConcept|undefined} value */
proto.ai.grakn.rpc.generated.TxResponse.prototype.setOptionalconcept = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.ai.grakn.rpc.generated.TxResponse.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxResponse.prototype.clearOptionalconcept = function() {
  this.setOptionalconcept(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.hasOptionalconcept = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RolePlayer rolePlayer = 7;
 * @return {?proto.ai.grakn.rpc.generated.RolePlayer}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.getRoleplayer = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.RolePlayer} */ (
    jspb.Message.getWrapperField(this, concept_pb.RolePlayer, 7));
};


/** @param {?proto.ai.grakn.rpc.generated.RolePlayer|undefined} value */
proto.ai.grakn.rpc.generated.TxResponse.prototype.setRoleplayer = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.ai.grakn.rpc.generated.TxResponse.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.TxResponse.prototype.clearRoleplayer = function() {
  this.setRoleplayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.TxResponse.prototype.hasRoleplayer = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.QueryResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai.grakn.rpc.generated.QueryResult.oneofGroups_);
};
goog.inherits(proto.ai.grakn.rpc.generated.QueryResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.QueryResult.displayName = 'proto.ai.grakn.rpc.generated.QueryResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.grakn.rpc.generated.QueryResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.ai.grakn.rpc.generated.QueryResult.QueryresultCase = {
  QUERYRESULT_NOT_SET: 0,
  ANSWER: 1,
  OTHERRESULT: 2
};

/**
 * @return {proto.ai.grakn.rpc.generated.QueryResult.QueryresultCase}
 */
proto.ai.grakn.rpc.generated.QueryResult.prototype.getQueryresultCase = function() {
  return /** @type {proto.ai.grakn.rpc.generated.QueryResult.QueryresultCase} */(jspb.Message.computeOneofCase(this, proto.ai.grakn.rpc.generated.QueryResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.QueryResult.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.QueryResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.QueryResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.QueryResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    answer: (f = msg.getAnswer()) && proto.ai.grakn.rpc.generated.Answer.toObject(includeInstance, f),
    otherresult: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.QueryResult}
 */
proto.ai.grakn.rpc.generated.QueryResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.QueryResult;
  return proto.ai.grakn.rpc.generated.QueryResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.QueryResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.QueryResult}
 */
proto.ai.grakn.rpc.generated.QueryResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.grakn.rpc.generated.Answer;
      reader.readMessage(value,proto.ai.grakn.rpc.generated.Answer.deserializeBinaryFromReader);
      msg.setAnswer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtherresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.QueryResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.QueryResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.QueryResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.QueryResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.grakn.rpc.generated.Answer.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Answer answer = 1;
 * @return {?proto.ai.grakn.rpc.generated.Answer}
 */
proto.ai.grakn.rpc.generated.QueryResult.prototype.getAnswer = function() {
  return /** @type{?proto.ai.grakn.rpc.generated.Answer} */ (
    jspb.Message.getWrapperField(this, proto.ai.grakn.rpc.generated.Answer, 1));
};


/** @param {?proto.ai.grakn.rpc.generated.Answer|undefined} value */
proto.ai.grakn.rpc.generated.QueryResult.prototype.setAnswer = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ai.grakn.rpc.generated.QueryResult.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.QueryResult.prototype.clearAnswer = function() {
  this.setAnswer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.QueryResult.prototype.hasAnswer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string otherResult = 2;
 * @return {string}
 */
proto.ai.grakn.rpc.generated.QueryResult.prototype.getOtherresult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ai.grakn.rpc.generated.QueryResult.prototype.setOtherresult = function(value) {
  jspb.Message.setOneofField(this, 2, proto.ai.grakn.rpc.generated.QueryResult.oneofGroups_[0], value);
};


proto.ai.grakn.rpc.generated.QueryResult.prototype.clearOtherresult = function() {
  jspb.Message.setOneofField(this, 2, proto.ai.grakn.rpc.generated.QueryResult.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.grakn.rpc.generated.QueryResult.prototype.hasOtherresult = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.Done = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.Done, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.Done.displayName = 'proto.ai.grakn.rpc.generated.Done';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.Done.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.Done.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.Done} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Done.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.Done}
 */
proto.ai.grakn.rpc.generated.Done.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.Done;
  return proto.ai.grakn.rpc.generated.Done.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.Done} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.Done}
 */
proto.ai.grakn.rpc.generated.Done.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.Done.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.Done.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.Done} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Done.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.Answer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.Answer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.Answer.displayName = 'proto.ai.grakn.rpc.generated.Answer';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.Answer.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.Answer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.Answer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Answer.toObject = function(includeInstance, msg) {
  var f, obj = {
    answerMap: (f = msg.getAnswerMap()) ? f.toObject(includeInstance, proto.ai.grakn.rpc.generated.Concept.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.Answer}
 */
proto.ai.grakn.rpc.generated.Answer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.Answer;
  return proto.ai.grakn.rpc.generated.Answer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.Answer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.Answer}
 */
proto.ai.grakn.rpc.generated.Answer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getAnswerMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.ai.grakn.rpc.generated.Concept.deserializeBinaryFromReader);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.Answer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.Answer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.Answer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Answer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswerMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.ai.grakn.rpc.generated.Concept.serializeBinaryToWriter);
  }
};


/**
 * map<string, Concept> answer = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.ai.grakn.rpc.generated.Concept>}
 */
proto.ai.grakn.rpc.generated.Answer.prototype.getAnswerMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.ai.grakn.rpc.generated.Concept>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.ai.grakn.rpc.generated.Concept));
};


proto.ai.grakn.rpc.generated.Answer.prototype.clearAnswerMap = function() {
  this.getAnswerMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.Keyspace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.Keyspace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.Keyspace.displayName = 'proto.ai.grakn.rpc.generated.Keyspace';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.Keyspace.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.Keyspace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.Keyspace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Keyspace.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.Keyspace}
 */
proto.ai.grakn.rpc.generated.Keyspace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.Keyspace;
  return proto.ai.grakn.rpc.generated.Keyspace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.Keyspace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.Keyspace}
 */
proto.ai.grakn.rpc.generated.Keyspace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.Keyspace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.Keyspace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.Keyspace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Keyspace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.ai.grakn.rpc.generated.Keyspace.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ai.grakn.rpc.generated.Keyspace.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.grakn.rpc.generated.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.grakn.rpc.generated.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.grakn.rpc.generated.Query.displayName = 'proto.ai.grakn.rpc.generated.Query';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.grakn.rpc.generated.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.grakn.rpc.generated.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.grakn.rpc.generated.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.grakn.rpc.generated.Query}
 */
proto.ai.grakn.rpc.generated.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.grakn.rpc.generated.Query;
  return proto.ai.grakn.rpc.generated.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.grakn.rpc.generated.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.grakn.rpc.generated.Query}
 */
proto.ai.grakn.rpc.generated.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.grakn.rpc.generated.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.grakn.rpc.generated.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.grakn.rpc.generated.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.grakn.rpc.generated.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.ai.grakn.rpc.generated.Query.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ai.grakn.rpc.generated.Query.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.ai.grakn.rpc.generated.TxType = {
  READ: 0,
  WRITE: 1,
  BATCH: 2
};

goog.object.extend(exports, proto.ai.grakn.rpc.generated);
