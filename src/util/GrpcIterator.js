const messages = require("../autogenerated/grakn_pb");

// -- Query Iterator -- //

function GrpcQueryIterator(iteratorId, communicator) {
  this.nextRequest = _buildNextRequest(iteratorId);
  this.communicator = communicator;
}

GrpcQueryIterator.prototype.nextResult = async function () {
  return await this.communicator
    .send(this.nextRequest)
    .then(_handleQueryResponse)
    .catch(e => { throw e; });
};

function _handleQueryResponse(response) {
  if (response.hasDone()) return null;
  if (response.hasQueryresult()) return response.getQueryresult();
  throw "Unexpected response from server.";
}

// -- Concept Iterator -- //

function GrpcConceptIterator(iteratorId, communicator) {
  this.nextRequest = _buildNextRequest(iteratorId);
  this.communicator = communicator;
}

GrpcConceptIterator.prototype.nextResult = async function () {
  return await this.communicator
    .send(this.nextRequest)
    .then(_handleConceptResponse)
    .catch(e => { throw e; });
};

function _handleConceptResponse(response) {
  if (response.hasDone()) return null;
  if (response.hasConcept()) return response.getConcept();
  throw "Unexpected response from server.";
}

// -- RolePlayer Iterator -- //

function GrpcRolePlayerIterator(iteratorId, communicator) {
  this.nextRequest = _buildNextRequest(iteratorId);
  this.communicator = communicator;
}

GrpcRolePlayerIterator.prototype.nextResult = async function () {
  return await this.communicator
    .send(this.nextRequest)
    .then(_handleRolePlayerResponse)
    .catch(e => { throw e; });
};

function _handleRolePlayerResponse(response) {
  if (response.hasDone()) return null;
  if (response.hasRoleplayer()) return response.getRoleplayer();
  throw "Unexpected response from server.";
}

// - Shared helper - //

function _buildNextRequest(iteratorId) {
  const nr = new messages.Next();
  nr.setIteratorid(iteratorId);
  const tr = new messages.TxRequest();
  tr.setNext(nr);
  return tr;
}

module.exports = { GrpcQueryIterator, GrpcConceptIterator, GrpcRolePlayerIterator };
